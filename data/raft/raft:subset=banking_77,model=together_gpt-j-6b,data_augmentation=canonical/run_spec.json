{
  "name": "raft:subset=banking_77,model=together_gpt-j-6b,data_augmentation=canonical",
  "scenario_spec": {
    "class_name": "benchmark.scenarios.raft_scenario.RAFTScenario",
    "args": {
      "subset": "banking_77"
    }
  },
  "adapter_spec": {
    "method": "generation",
    "global_prefix": "",
    "instructions": "The following is a banking customer service query. Classify the query into one of the 77 categories available.\nPossible labels:\n1. Refund_not_showing_up\n2. activate_my_card\n3. age_limit\n4. apple_pay_or_google_pay\n5. atm_support\n6. automatic_top_up\n7. balance_not_updated_after_bank_transfer\n8. balance_not_updated_after_cheque_or_cash_deposit\n9. beneficiary_not_allowed\n10. cancel_transfer\n11. card_about_to_expire\n12. card_acceptance\n13. card_arrival\n14. card_delivery_estimate\n15. card_linking\n16. card_not_working\n17. card_payment_fee_charged\n18. card_payment_not_recognised\n19. card_payment_wrong_exchange_rate\n20. card_swallowed\n21. cash_withdrawal_charge\n22. cash_withdrawal_not_recognised\n23. change_pin\n24. compromised_card\n25. contactless_not_working\n26. country_support\n27. declined_card_payment\n28. declined_cash_withdrawal\n29. declined_transfer\n30. direct_debit_payment_not_recognised\n31. disposable_card_limits\n32. edit_personal_details\n33. exchange_charge\n34. exchange_rate\n35. exchange_via_app\n36. extra_charge_on_statement\n37. failed_transfer\n38. fiat_currency_support\n39. get_disposable_virtual_card\n40. get_physical_card\n41. getting_spare_card\n42. getting_virtual_card\n43. lost_or_stolen_card\n44. lost_or_stolen_phone\n45. order_physical_card\n46. passcode_forgotten\n47. pending_card_payment\n48. pending_cash_withdrawal\n49. pending_top_up\n50. pending_transfer\n51. pin_blocked\n52. receiving_money\n53. request_refund\n54. reverted_card_payment?\n55. supported_cards_and_currencies\n56. terminate_account\n57. top_up_by_bank_transfer_charge\n58. top_up_by_card_charge\n59. top_up_by_cash_or_cheque\n60. top_up_failed\n61. top_up_limits\n62. top_up_reverted\n63. topping_up_by_card\n64. transaction_charged_twice\n65. transfer_fee_charged\n66. transfer_into_account\n67. transfer_not_received_by_recipient\n68. transfer_timing\n69. unable_to_verify_identity\n70. verify_my_identity\n71. verify_source_of_funds\n72. verify_top_up\n73. virtual_card_not_working\n74. visa_or_mastercard\n75. why_verify_identity\n76. wrong_amount_of_cash_received\n77. wrong_exchange_rate_for_cash_withdrawal\n",
    "input_prefix": "",
    "input_suffix": "\n",
    "reference_prefix": "A. ",
    "reference_suffix": "\n",
    "output_prefix": "Label: ",
    "output_suffix": "\n",
    "instance_prefix": "\n",
    "substitutions": [],
    "max_train_instances": 5,
    "max_eval_instances": 1000,
    "num_outputs": 1,
    "num_train_trials": 3,
    "model": "together/gpt-j-6b",
    "temperature": 0.0,
    "max_tokens": 30,
    "stop_sequences": [
      "\n"
    ]
  },
  "metric_specs": [
    {
      "class_name": "benchmark.basic_metrics.BasicMetric",
      "args": {
        "names": [
          "exact_match",
          "quasi_exact_match",
          "prefix_exact_match",
          "quasi_prefix_exact_match"
        ]
      }
    },
    {
      "class_name": "benchmark.bias_metrics.BiasMetric",
      "args": {
        "mode": "associations",
        "demographic_category": "race",
        "target_category": "adjective"
      }
    },
    {
      "class_name": "benchmark.bias_metrics.BiasMetric",
      "args": {
        "mode": "associations",
        "demographic_category": "race",
        "target_category": "profession"
      }
    },
    {
      "class_name": "benchmark.bias_metrics.BiasMetric",
      "args": {
        "mode": "associations",
        "demographic_category": "gender",
        "target_category": "adjective"
      }
    },
    {
      "class_name": "benchmark.bias_metrics.BiasMetric",
      "args": {
        "mode": "associations",
        "demographic_category": "gender",
        "target_category": "profession"
      }
    },
    {
      "class_name": "benchmark.bias_metrics.BiasMetric",
      "args": {
        "mode": "representation",
        "demographic_category": "race"
      }
    },
    {
      "class_name": "benchmark.bias_metrics.BiasMetric",
      "args": {
        "mode": "representation",
        "demographic_category": "gender"
      }
    },
    {
      "class_name": "benchmark.toxicity_metrics.ToxicityMetric",
      "args": {}
    }
  ],
  "data_augmenter_spec": {
    "perturbation_specs": [
      {
        "class_name": "benchmark.augmentations.mild_mix_perturbation.MildMixPerturbation",
        "args": {}
      },
      {
        "class_name": "benchmark.augmentations.dialect_perturbation.DialectPerturbation",
        "args": {
          "prob": 1.0,
          "source_class": "SAE",
          "target_class": "AAVE",
          "mapping_file_path": null
        }
      },
      {
        "class_name": "benchmark.augmentations.gender_perturbation.GenderPerturbation",
        "args": {
          "mode": "pronouns",
          "prob": 1.0,
          "source_class": "male",
          "target_class": "female",
          "mapping_file_path": null,
          "mapping_file_genders": null,
          "bidirectional": false
        }
      },
      {
        "class_name": "benchmark.augmentations.person_name_perturbation.PersonNamePerturbation",
        "args": {
          "prob": 1.0,
          "source_class": {
            "race": "white_american"
          },
          "target_class": {
            "race": "black_american"
          },
          "name_file_path": null,
          "person_name_type": "first_name",
          "preserve_gender": true
        }
      }
    ],
    "should_augment_train_instances": false,
    "should_include_original_train": true,
    "should_skip_unchanged_train": true,
    "should_augment_eval_instances": true,
    "should_include_original_eval": true,
    "should_skip_unchanged_eval": true,
    "seeds_per_instance": 1
  },
  "groups": [
    "raft"
  ]
}